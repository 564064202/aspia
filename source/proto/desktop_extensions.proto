//
// Aspia Project
// Copyright (C) 2020 Dmitry Chapyshev <dmitry@aspia.ru>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

import "system_info.proto";

package proto;

message Resolution
{
    int32 width  = 2;
    int32 height = 3;
}

// Extension name: "select_screen"
// Sent by client to host for screen or screen resolution selection.
message Screen
{
    int64 id              = 1;
    string title          = 2;
    Resolution resolution = 3;
}

// Extension name: "select_screen"
// Sent by host to client. Contains a list of screens on the host.
message ScreenList
{
    repeated Screen screen         = 1; // List of screens on the remote computer.
    int64 current_screen           = 2; // ID of current screen.
    int64 primary_screen           = 3; // ID of primary screen.
    repeated Resolution resolution = 4; // List of resolutions for current screen.
}

// Extension name: "preferred_size"
// Sent by client to host.
message PreferredSize
{
    int32 width  = 1;
    int32 height = 2;
}

// Extension name: "power_control"
// Sent by client to host.
message PowerControl
{
    enum Action
    {
        ACTION_UNKNOWN          = 0;
        ACTION_SHUTDOWN         = 1;
        ACTION_REBOOT           = 2;
        ACTION_LOGOFF           = 3;
        ACTION_LOCK             = 4;
        ACTION_REBOOT_SAFE_MODE = 5;
    }

    Action action = 1;
}

// Extension name: "system_info"
// Sent by client to host.
message SystemInfoRequest
{
    string category = 1;
    bytes data      = 2;
}

message SystemInfoFooter
{
    string category = 1;
}

// Extension name: "system_info"
// Sent by host to client.
message SystemInfo
{
    system_info.Computer computer                = 1;
    system_info.OperatingSystem operating_system = 2;
    system_info.Motherboard motherboard          = 3;
    system_info.Bios bios                        = 4;
    system_info.Processor processor              = 5;
    system_info.Memory memory                    = 6;
    system_info.LogicalDrives logical_drives     = 7;
    system_info.Printers printers                = 8;
    system_info.NetworkAdapters network_adapters = 9;
    system_info.NetworkShares network_shares     = 10;
    system_info.WindowsDevices windows_devices   = 11;
    system_info.VideoAdapters video_adapters     = 12;
    system_info.Monitors monitors                = 13;
    system_info.PowerOptions power_options       = 14;
    system_info.Drivers drivers                  = 15;
    system_info.Services services                = 16;
    system_info.EnvironmentVariables env_vars    = 17;
    system_info.EventLogs event_logs             = 18;
    system_info.Routes routes                    = 19;
    system_info.Connections connections          = 20;
    system_info.Ras ras                          = 21;
    SystemInfoFooter footer                      = 128000;
}

// Extension name: "video_recording"
// Sent by host to client and by client to host.
message VideoRecording
{
    enum Action
    {
        ACTION_UNKNOWN = 0;
        ACTION_STARTED = 1;
        ACTION_STOPPED = 2;
    }

    Action action = 1;
}
